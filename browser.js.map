{"version":3,"file":"browser.js","sources":["../node_modules/@stdlib/math-base-special-fast-max/lib/main.js","../node_modules/@stdlib/math-base-special-fast-min/lib/main.js","../node_modules/@stdlib/array-base-filled/lib/main.js","../node_modules/@stdlib/array-base-zeros2d/lib/main.js","../node_modules/@stdlib/array-base-filled2d/lib/main.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the maximum value.\n*\n* @param {number} x - first number\n* @param {number} y - second number\n* @returns {number} maximum value\n*\n* @example\n* var v = max( 3.14, 4.2 );\n* // returns 4.2\n*\n* @example\n* var v = max( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = max( NaN, 3.14 );\n* // returns 3.14\n*\n* @example\n* var v = max( -0.0, +0.0 );\n* // returns +0.0\n*\n* @example\n* var v = max( +0.0, -0.0 );\n* // returns -0.0\n*/\nfunction max( x, y ) {\n\tif ( x > y ) {\n\t\treturn x;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default max;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns the minimum value.\n*\n* @param {number} x - first number\n* @param {number} y - second number\n* @returns {number} minimum value\n*\n* @example\n* var v = min( 3.14, 4.2 );\n* // returns 3.14\n*\n* @example\n* var v = min( 3.14, NaN );\n* // returns NaN\n*\n* @example\n* var v = min( NaN, 3.14 );\n* // returns 3.14\n*\n* @example\n* var v = min( -0.0, +0.0 );\n* // returns +0.0\n*\n* @example\n* var v = min( +0.0, -0.0 );\n* // returns -0.0\n*/\nfunction min( x, y ) {\n\tif ( x < y ) {\n\t\treturn x;\n\t}\n\treturn y;\n}\n\n\n// EXPORTS //\n\nexport default min;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a filled \"generic\" array.\n*\n* @param {*} value - fill value\n* @param {NonNegativeInteger} len - array length\n* @returns {Array} filled array\n*\n* @example\n* var out = filled( 0.0, 3 );\n* // returns [ 0.0, 0.0, 0.0 ]\n*\n* @example\n* var out = filled( 'beep', 3 );\n* // returns [ 'beep', 'beep', 'beep' ]\n*/\nfunction filled( value, len ) {\n\tvar arr;\n\tvar i;\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i = 0; i < len; i++ ) {\n\t\tarr.push( value );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default filled;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled2d from '@stdlib/array-base-filled2d';\n\n\n// MAIN //\n\n/**\n* Returns a zero-filled two-dimensional nested array.\n*\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {ArrayArray} filled array\n*\n* @example\n* var out = zeros2d( [ 1, 3 ] );\n* // returns [ [ 0.0, 0.0, 0.0 ] ]\n*/\nfunction zeros2d( shape ) {\n\treturn filled2d( 0.0, shape );\n}\n\n\n// EXPORTS //\n\nexport default zeros2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2023 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport filled from '@stdlib/array-base-filled';\n\n\n// MAIN //\n\n/**\n* Returns a filled two-dimensional nested array.\n*\n* @param {*} value - fill value\n* @param {NonNegativeIntegerArray} shape - array shape\n* @returns {Array} filled array\n*\n* @example\n* var out = filled2d( 0.0, [ 1, 3 ] );\n* // returns [ [ 0.0, 0.0, 0.0 ] ]\n*\n* @example\n* var out = filled2d( 'beep', [ 3, 1 ] );\n* // returns [ [ 'beep' ], [ 'beep' ], [ 'beep' ] ]\n*/\nfunction filled2d( value, shape ) {\n\tvar arr;\n\tvar S0;\n\tvar S1;\n\tvar i;\n\n\tS0 = shape[ 1 ];\n\tS1 = shape[ 0 ];\n\n\t// Manually push elements in order to ensure \"fast\" elements...\n\tarr = [];\n\tfor ( i = 0; i < S1; i++ ) {\n\t\tarr.push( filled( value, S0 ) );\n\t}\n\treturn arr;\n}\n\n\n// EXPORTS //\n\nexport default filled2d;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport max from '@stdlib/math-base-special-fast-max';\nimport min from '@stdlib/math-base-special-fast-min';\nimport zeros2d from '@stdlib/array-base-zeros2d';\n\n\n// MAIN //\n\n/**\n* Converts a two-dimensional symmetric banded nested array to compact banded storage.\n*\n* @param {string} uplo - specifies whether to reference the upper or lower triangular part of the input array\n* @param {Array<Array>} arr - input two-dimensional array\n* @param {NonNegativeInteger} k - number of super-/sub-diagonals\n* @param {boolean} colexicographic - specifies whether to store diagonals in colexicographic access order\n* @returns {Array<Array>} output array\n*\n* @example\n* var M = [\n*     [ 11, 2, 0 ],\n*     [ 2, 12, 4 ],\n*     [ 0, 4, 13 ]\n* ];\n*\n* var out = toCompact( 'upper', M, 1, false );\n* // returns [ [ 0, 2, 4 ], [ 11, 12, 13 ] ]\n*\n* @example\n* var M = [\n*     [ 11, 2, 0 ],\n*     [ 2, 12, 4 ],\n*     [ 0, 4, 13 ]\n* ];\n*\n* var out = toCompact( 'lower', M, 1, false );\n* // returns [ [ 11, 12, 13 ], [ 2, 4, 0 ] ]\n*\n* @example\n* var M = [\n*     [ 11, 2, 0 ],\n*     [ 2, 12, 4 ],\n*     [ 0, 4, 13 ]\n* ];\n*\n* var out = toCompact( 'upper', M, 1, true );\n* // returns [ [ 11, 2 ], [ 12, 4 ], [ 13, 0 ] ]\n*\n* @example\n* var M = [\n*     [ 11, 2, 0 ],\n*     [ 2, 12, 4 ],\n*     [ 0, 4, 13 ]\n* ];\n*\n* var out = toCompact( 'lower', M, 1, true );\n* // returns [ [ 0, 11 ], [ 2, 12 ], [ 4, 13 ] ]\n*/\nfunction toCompact( uplo, arr, k, colexicographic ) {\n\tvar out;\n\tvar to;\n\tvar ta;\n\tvar m;\n\tvar i;\n\tvar j;\n\tvar o;\n\n\tm = arr.length;\n\n\t// Check whether to store diagonals along the columns...\n\tif ( colexicographic ) {\n\t\tout = zeros2d( [ m, k+1 ] );\n\t\tif ( uplo === 'upper' ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tto = out[ i ];\n\t\t\t\tta = arr[ i ];\n\t\t\t\tfor ( j = i; j < min( m, i+k+1 ); j++ ) {\n\t\t\t\t\tto[ j-i ] = ta[ j ];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\t// uplo === 'lower'\n\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\tto = out[ i ];\n\t\t\tta = arr[ i ];\n\t\t\to = max( 0, k-i );\n\t\t\tfor ( j = max( 0, i-k ); j <= i; j++ ) {\n\t\t\t\tto[ o ] = ta[ j ];\n\t\t\t\to += 1;\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\t// Store diagonals along the rows...\n\tout = zeros2d( [ k+1, m ] );\n\tif ( uplo === 'upper' ) {\n\t\tfor ( j = 0; j < m; j++ ) {\n\t\t\to = k - j;\n\t\t\tfor ( i = max( 0, j-k ); i <= j; i++ ) {\n\t\t\t\tout[ o+i ][ j ] = arr[ i ][ j ];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\t// uplo === 'lower'\n\tfor ( j = 0; j < m; j++ ) {\n\t\to = -j;\n\t\tfor ( i = j; i < min( m, j+k+1 ); i++ ) {\n\t\t\tout[ o+i ][ j ] = arr[ i ][ j ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toCompact;\n"],"names":["max","x","y","min","filled","value","len","arr","i","push","zeros2d","shape","S0","S1","filled2d","uplo","k","colexicographic","out","to","ta","m","j","o","length"],"mappings":";yCAiDA,SAASA,EAAKC,EAAGC,GAChB,OAAKD,EAAIC,EACDD,EAEDC,CACR,CCLA,SAASC,EAAKF,EAAGC,GAChB,OAAKD,EAAIC,EACDD,EAEDC,CACR,CCjBA,SAASE,EAAQC,EAAOC,GACvB,IAAIC,EACAC,EAIJ,IADAD,EAAM,GACAC,EAAI,EAAGA,EAAIF,EAAKE,IACrBD,EAAIE,KAAMJ,GAEX,OAAOE,CACR,CCVA,SAASG,EAASC,GACjB,OCID,SAAmBN,EAAOM,GACzB,IAAIJ,EACAK,EACAC,EACAL,EAOJ,IALAI,EAAKD,EAAO,GACZE,EAAKF,EAAO,GAGZJ,EAAM,GACAC,EAAI,EAAGA,EAAIK,EAAIL,IACpBD,EAAIE,KAAML,EAAQC,EAAOO,IAE1B,OAAOL,CACR,CDnBQO,CAAU,EAAKH,EACvB,QEuCA,SAAoBI,EAAMR,EAAKS,EAAGC,GACjC,IAAIC,EACAC,EACAC,EACAC,EACAb,EACAc,EACAC,EAKJ,GAHAF,EAAId,EAAIiB,OAGHP,EAAkB,CAEtB,GADAC,EAAMR,EAAS,CAAEW,EAAGL,EAAE,IACR,UAATD,EAAmB,CACvB,IAAMP,EAAI,EAAGA,EAAIa,EAAGb,IAGnB,IAFAW,EAAKD,EAAKV,GACVY,EAAKb,EAAKC,GACJc,EAAId,EAAGc,EAAInB,EAAKkB,EAAGb,EAAEQ,EAAE,GAAKM,IACjCH,EAAIG,EAAEd,GAAMY,EAAIE,GAGlB,OAAOJ,CACP,CAED,IAAMV,EAAI,EAAGA,EAAIa,EAAGb,IAInB,IAHAW,EAAKD,EAAKV,GACVY,EAAKb,EAAKC,GACVe,EAAIvB,EAAK,EAAGgB,EAAER,GACRc,EAAItB,EAAK,EAAGQ,EAAEQ,GAAKM,GAAKd,EAAGc,IAChCH,EAAII,GAAMH,EAAIE,GACdC,GAAK,EAGP,OAAOL,CACP,CAGD,GADAA,EAAMR,EAAS,CAAEM,EAAE,EAAGK,IACR,UAATN,EAAmB,CACvB,IAAMO,EAAI,EAAGA,EAAID,EAAGC,IAEnB,IADAC,EAAIP,EAAIM,EACFd,EAAIR,EAAK,EAAGsB,EAAEN,GAAKR,GAAKc,EAAGd,IAChCU,EAAKK,EAAEf,GAAKc,GAAMf,EAAKC,GAAKc,GAG9B,OAAOJ,CACP,CAED,IAAMI,EAAI,EAAGA,EAAID,EAAGC,IAEnB,IADAC,GAAKD,EACCd,EAAIc,EAAGd,EAAIL,EAAKkB,EAAGC,EAAEN,EAAE,GAAKR,IACjCU,EAAKK,EAAEf,GAAKc,GAAMf,EAAKC,GAAKc,GAG9B,OAAOJ,CACR","x_google_ignoreList":[0,1,2,3,4]}