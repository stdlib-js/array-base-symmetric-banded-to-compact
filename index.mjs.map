{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport max from '@stdlib/math-base-special-fast-max';\nimport min from '@stdlib/math-base-special-fast-min';\nimport zeros2d from '@stdlib/array-base-zeros2d';\n\n\n// MAIN //\n\n/**\n* Converts a two-dimensional symmetric banded nested array to compact banded storage.\n*\n* @param {string} uplo - specifies whether to reference the upper or lower triangular part of the input array\n* @param {Array<Array>} arr - input two-dimensional array\n* @param {NonNegativeInteger} k - number of super-/sub-diagonals\n* @param {boolean} colexicographic - specifies whether to store diagonals in colexicographic access order\n* @returns {Array<Array>} output array\n*\n* @example\n* var M = [\n*     [ 11, 2, 0 ],\n*     [ 2, 12, 4 ],\n*     [ 0, 4, 13 ]\n* ];\n*\n* var out = toCompact( 'upper', M, 1, false );\n* // returns [ [ 0, 2, 4 ], [ 11, 12, 13 ] ]\n*\n* @example\n* var M = [\n*     [ 11, 2, 0 ],\n*     [ 2, 12, 4 ],\n*     [ 0, 4, 13 ]\n* ];\n*\n* var out = toCompact( 'lower', M, 1, false );\n* // returns [ [ 11, 12, 13 ], [ 2, 4, 0 ] ]\n*\n* @example\n* var M = [\n*     [ 11, 2, 0 ],\n*     [ 2, 12, 4 ],\n*     [ 0, 4, 13 ]\n* ];\n*\n* var out = toCompact( 'upper', M, 1, true );\n* // returns [ [ 11, 2 ], [ 12, 4 ], [ 13, 0 ] ]\n*\n* @example\n* var M = [\n*     [ 11, 2, 0 ],\n*     [ 2, 12, 4 ],\n*     [ 0, 4, 13 ]\n* ];\n*\n* var out = toCompact( 'lower', M, 1, true );\n* // returns [ [ 0, 11 ], [ 2, 12 ], [ 4, 13 ] ]\n*/\nfunction toCompact( uplo, arr, k, colexicographic ) {\n\tvar out;\n\tvar to;\n\tvar ta;\n\tvar m;\n\tvar i;\n\tvar j;\n\tvar o;\n\n\tm = arr.length;\n\n\t// Check whether to store diagonals along the columns...\n\tif ( colexicographic ) {\n\t\tout = zeros2d( [ m, k+1 ] );\n\t\tif ( uplo === 'upper' ) {\n\t\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\t\tto = out[ i ];\n\t\t\t\tta = arr[ i ];\n\t\t\t\tfor ( j = i; j < min( m, i+k+1 ); j++ ) {\n\t\t\t\t\tto[ j-i ] = ta[ j ];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\t// uplo === 'lower'\n\t\tfor ( i = 0; i < m; i++ ) {\n\t\t\tto = out[ i ];\n\t\t\tta = arr[ i ];\n\t\t\to = max( 0, k-i );\n\t\t\tfor ( j = max( 0, i-k ); j <= i; j++ ) {\n\t\t\t\tto[ o ] = ta[ j ];\n\t\t\t\to += 1;\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\t// Store diagonals along the rows...\n\tout = zeros2d( [ k+1, m ] );\n\tif ( uplo === 'upper' ) {\n\t\tfor ( j = 0; j < m; j++ ) {\n\t\t\to = k - j;\n\t\t\tfor ( i = max( 0, j-k ); i <= j; i++ ) {\n\t\t\t\tout[ o+i ][ j ] = arr[ i ][ j ];\n\t\t\t}\n\t\t}\n\t\treturn out;\n\t}\n\t// uplo === 'lower'\n\tfor ( j = 0; j < m; j++ ) {\n\t\to = -j;\n\t\tfor ( i = j; i < min( m, j+k+1 ); i++ ) {\n\t\t\tout[ o+i ][ j ] = arr[ i ][ j ];\n\t\t}\n\t}\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default toCompact;\n"],"names":["toCompact","uplo","arr","k","colexicographic","out","to","ta","m","i","j","o","length","zeros2d","min","max"],"mappings":";;uSA8EA,SAASA,EAAWC,EAAMC,EAAKC,EAAGC,GACjC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAKJ,GAHAH,EAAIN,EAAIU,OAGHR,EAAkB,CAEtB,GADAC,EAAMQ,EAAS,CAAEL,EAAGL,EAAE,IACR,UAATF,EAAmB,CACvB,IAAMQ,EAAI,EAAGA,EAAID,EAAGC,IAGnB,IAFAH,EAAKD,EAAKI,GACVF,EAAKL,EAAKO,GACJC,EAAID,EAAGC,EAAII,EAAKN,EAAGC,EAAEN,EAAE,GAAKO,IACjCJ,EAAII,EAAED,GAAMF,EAAIG,GAGlB,OAAOL,CACP,CAED,IAAMI,EAAI,EAAGA,EAAID,EAAGC,IAInB,IAHAH,EAAKD,EAAKI,GACVF,EAAKL,EAAKO,GACVE,EAAII,EAAK,EAAGZ,EAAEM,GACRC,EAAIK,EAAK,EAAGN,EAAEN,GAAKO,GAAKD,EAAGC,IAChCJ,EAAIK,GAAMJ,EAAIG,GACdC,GAAK,EAGP,OAAON,CACP,CAGD,GADAA,EAAMQ,EAAS,CAAEV,EAAE,EAAGK,IACR,UAATP,EAAmB,CACvB,IAAMS,EAAI,EAAGA,EAAIF,EAAGE,IAEnB,IADAC,EAAIR,EAAIO,EACFD,EAAIM,EAAK,EAAGL,EAAEP,GAAKM,GAAKC,EAAGD,IAChCJ,EAAKM,EAAEF,GAAKC,GAAMR,EAAKO,GAAKC,GAG9B,OAAOL,CACP,CAED,IAAMK,EAAI,EAAGA,EAAIF,EAAGE,IAEnB,IADAC,GAAKD,EACCD,EAAIC,EAAGD,EAAIK,EAAKN,EAAGE,EAAEP,EAAE,GAAKM,IACjCJ,EAAKM,EAAEF,GAAKC,GAAMR,EAAKO,GAAKC,GAG9B,OAAOL,CACR"}